{"version":3,"sources":["base.ts"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["import * as ts from 'typescript';\nimport {Transpiler} from './main';\n\nexport type ClassLike = ts.ClassDeclaration | ts.InterfaceDeclaration;\n\nexport function ident(n: ts.Node): string {\n  if (n.kind === ts.SyntaxKind.Identifier) return (<ts.Identifier>n).text;\n  if (n.kind === ts.SyntaxKind.QualifiedName) {\n    let qname = (<ts.QualifiedName>n);\n    let leftName = ident(qname.left);\n    if (leftName) return leftName + '.' + ident(qname.right);\n  }\n  return null;\n}\n\nexport class TranspilerBase {\n  private idCounter: number = 0;\n  constructor(private transpiler: Transpiler) {}\n\n  visit(n: ts.Node) { this.transpiler.visit(n); }\n  emit(s: string) { this.transpiler.emit(s); }\n  emitBefore(s: string, search: string) { this.transpiler.emitBefore(s, search); }\n  emitNoSpace(s: string) { this.transpiler.emitNoSpace(s); }\n  reportError(n: ts.Node, message: string) { this.transpiler.reportError(n, message); }\n\n  visitNode(n: ts.Node): boolean { throw new Error('not implemented'); }\n\n  visitEach(nodes: ts.Node[]) { nodes.forEach((n) => this.visit(n)); }\n\n  visitEachIfPresent(nodes?: ts.Node[]) {\n    if (nodes) this.visitEach(nodes);\n  }\n\n  visitList(nodes: ts.Node[], separator = ',') {\n    for (let i = 0; i < nodes.length; i++) {\n      this.visit(nodes[i]);\n      if (i < nodes.length - 1) this.emit(separator);\n    }\n  }\n\n  uniqueId(name: string): string {\n    const id = this.idCounter++;\n    return `_${name}\\$\\$ts2dart\\$${id}`;\n  }\n\n  assert(c: ts.Node, condition: boolean, reason: string): void {\n    if (!condition) {\n      this.reportError(c, reason);\n      throw new Error(reason);\n    }\n  }\n\n  getAncestor(n: ts.Node, kind: ts.SyntaxKind): ts.Node {\n    for (let parent = n; parent; parent = parent.parent) {\n      if (parent.kind === kind) return parent;\n    }\n    return null;\n  }\n\n  hasAncestor(n: ts.Node, kind: ts.SyntaxKind): boolean { return !!this.getAncestor(n, kind); }\n\n  hasAnnotation(decorators: ts.NodeArray<ts.Decorator>, name: string): boolean {\n    if (!decorators) return false;\n    return decorators.some((d) => {\n      let decName = ident(d.expression);\n      if (decName === name) return true;\n      if (d.expression.kind !== ts.SyntaxKind.CallExpression) return false;\n      let callExpr = (<ts.CallExpression>d.expression);\n      decName = ident(callExpr.expression);\n      return decName === name;\n    });\n  }\n\n  hasFlag(n: {flags: number}, flag: ts.NodeFlags): boolean {\n    return n && (n.flags & flag) !== 0 || false;\n  }\n\n  maybeDestructureIndexType(node: ts.TypeLiteralNode): [ts.TypeNode, ts.TypeNode] {\n    let members = node.members;\n    if (members.length !== 1 || members[0].kind !== ts.SyntaxKind.IndexSignature) {\n      return null;\n    }\n    let indexSig = <ts.IndexSignatureDeclaration>(members[0]);\n    if (indexSig.parameters.length > 1) {\n      this.reportError(indexSig, 'Expected an index signature to have a single parameter');\n    }\n    return [indexSig.parameters[0].type, indexSig.type];\n  }\n\n\n  getRelativeFileName(fileName: string): string {\n    return this.transpiler.getRelativeFileName(fileName);\n  }\n\n  maybeVisitTypeArguments(n: {typeArguments?: ts.NodeArray<ts.TypeNode>}) {\n    if (n.typeArguments) {\n      // If it's a single type argument `<void>`, ignore it and emit nothing.\n      // This is particularly useful for `Promise<void>`, see\n      // https://github.com/dart-lang/sdk/issues/2231#issuecomment-108313639\n      if (n.typeArguments.length === 1 && n.typeArguments[0].kind === ts.SyntaxKind.VoidKeyword) {\n        return;\n      }\n      this.emitNoSpace('<');\n      this.visitList(n.typeArguments);\n      this.emit('>');\n    }\n  }\n}\n"]}