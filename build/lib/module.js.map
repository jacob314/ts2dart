{"version":3,"sources":["module.ts"],"names":[],"mappings":"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","file":"module.js","sourcesContent":["import * as ts from 'typescript';\n\nimport * as base from './base';\nimport {FacadeConverter} from './facade_converter';\nimport {Transpiler} from './main';\n\nexport default class ModuleTranspiler extends base.TranspilerBase {\n  constructor(tr: Transpiler, private fc: FacadeConverter, private generateLibraryName: boolean) {\n    super(tr);\n  }\n\n  visitNode(node: ts.Node): boolean {\n    switch (node.kind) {\n      case ts.SyntaxKind.SourceFile:\n        let sf = <ts.SourceFile>node;\n        if (this.generateLibraryName) {\n          this.emit('library');\n          this.emit(this.getLibraryName(sf.fileName));\n          this.emit(';');\n        }\n        this.fc.emitExtraImports(sf);\n        ts.forEachChild(sf, this.visit.bind(this));\n        break;\n      case ts.SyntaxKind.EndOfFileToken:\n        ts.forEachChild(node, this.visit.bind(this));\n        break;\n      case ts.SyntaxKind.ImportDeclaration:\n        let importDecl = <ts.ImportDeclaration>node;\n        if (importDecl.importClause) {\n          if (this.isEmptyImport(importDecl)) return true;\n          this.emit('import');\n          this.visitExternalModuleReferenceExpr(importDecl.moduleSpecifier);\n          this.visit(importDecl.importClause);\n        } else {\n          this.reportError(importDecl, 'bare import is unsupported');\n        }\n        this.emit(';');\n        break;\n      case ts.SyntaxKind.ImportClause:\n        let importClause = <ts.ImportClause>node;\n        if (importClause.name) this.fc.visitTypeName(importClause.name);\n        if (importClause.namedBindings) {\n          this.visit(importClause.namedBindings);\n        }\n        break;\n      case ts.SyntaxKind.NamespaceImport:\n        let nsImport = <ts.NamespaceImport>node;\n        this.emit('as');\n        this.fc.visitTypeName(nsImport.name);\n        break;\n      case ts.SyntaxKind.NamedImports:\n        this.emit('show');\n        let used = this.filterImports((<ts.NamedImports>node).elements);\n        if (used.length === 0) {\n          this.reportError(node, 'internal error, used imports must not be empty');\n        }\n        this.visitList(used);\n        break;\n      case ts.SyntaxKind.NamedExports:\n        let exportElements = (<ts.NamedExports>node).elements;\n        this.emit('show');\n        if (exportElements.length === 0) this.reportError(node, 'empty export list');\n        this.visitList((<ts.NamedExports>node).elements);\n        break;\n      case ts.SyntaxKind.ImportSpecifier:\n      case ts.SyntaxKind.ExportSpecifier:\n        let spec = <ts.ImportOrExportSpecifier>node;\n        if (spec.propertyName) {\n          this.reportError(spec.propertyName, 'import/export renames are unsupported in Dart');\n        }\n        this.fc.visitTypeName(spec.name);\n        break;\n      case ts.SyntaxKind.ExportDeclaration:\n        let exportDecl = <ts.ExportDeclaration>node;\n        this.emit('export');\n        if (exportDecl.moduleSpecifier) {\n          this.visitExternalModuleReferenceExpr(exportDecl.moduleSpecifier);\n        } else {\n          this.reportError(node, 're-exports must have a module URL (export x from \"./y\").');\n        }\n        if (exportDecl.exportClause) this.visit(exportDecl.exportClause);\n        this.emit(';');\n        break;\n      case ts.SyntaxKind.ImportEqualsDeclaration:\n        let importEqDecl = <ts.ImportEqualsDeclaration>node;\n        this.emit('import');\n        this.visit(importEqDecl.moduleReference);\n        this.emit('as');\n        this.fc.visitTypeName(importEqDecl.name);\n        this.emit(';');\n        break;\n      case ts.SyntaxKind.ExternalModuleReference:\n        this.visitExternalModuleReferenceExpr((<ts.ExternalModuleReference>node).expression);\n        break;\n\n      default:\n        return false;\n    }\n    return true;\n  }\n\n  private static isIgnoredImport(e: ts.ImportSpecifier) {\n    // TODO: unify with facade_converter.ts\n    let name = base.ident(e.name);\n    switch (name) {\n      case 'CONST':\n      case 'CONST_EXPR':\n      case 'normalizeBlank':\n      case 'forwardRef':\n      case 'ABSTRACT':\n      case 'IMPLEMENTS':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  private visitExternalModuleReferenceExpr(expr: ts.Expression) {\n    // TODO: what if this isn't a string literal?\n    let moduleName = <ts.StringLiteral>expr;\n    let text = moduleName.text;\n    if (text.match(/^\\.\\//)) {\n      // Strip './' to be more Dart-idiomatic.\n      text = text.substring(2).replace(/([A-Z])/g, function($1){return \"_\"+$1.toLowerCase();});\n      if (text.charAt(0) == '_') {\n        text = text.substring(1);\n      }\n      text = text.replace(/\\/_/g, '\\/');\n    } else if (!text.match(/^\\.\\.\\//)) {\n      // Replace '@angular' with 'angular2' for Dart.\n      text = text.replace(/^@keikai\\//, 'keikai/');\n      // Unprefixed/absolute imports are package imports.\n      text = 'package:' + text;\n    }\n    text = JSON.stringify(text + '.dart');\n    this.emit(\"'\" + (text.substring(1, text.length - 1)) + \"'\");\n  }\n\n  private isEmptyImport(n: ts.ImportDeclaration): boolean {\n    let bindings = n.importClause.namedBindings;\n    if (bindings.kind !== ts.SyntaxKind.NamedImports) return false;\n    let elements = (<ts.NamedImports>bindings).elements;\n    // An import list being empty *after* filtering is ok, but if it's empty in the code itself,\n    // it's nonsensical code, so probably a programming error.\n    if (elements.length === 0) this.reportError(n, 'empty import list');\n    return elements.every(ModuleTranspiler.isIgnoredImport);\n  }\n\n  private filterImports(ns: ts.ImportOrExportSpecifier[]) {\n    return ns.filter((e) => !ModuleTranspiler.isIgnoredImport(e));\n  }\n\n  // For the Dart keyword list see\n  // https://www.dartlang.org/docs/dart-up-and-running/ch02.html#keywords\n  private static DART_RESERVED_WORDS =\n      ('assert break case catch class const continue default do else enum extends false final ' +\n       'finally for if in is new null rethrow return super switch this throw true try let void ' +\n       'while with')\n          .split(/ /);\n\n  getLibraryName(fileName: string) {\n    fileName = this.getRelativeFileName(fileName);\n    let parts = fileName.split('/');\n    return parts.filter((p) => p.length > 0)\n        .map((p) => p.replace(/^@/, ''))\n        .map((p) => p.replace(/[^\\w.]/g, '_'))\n        .map((p) => p.replace(/\\.[jt]s$/g, ''))\n        .map((p) => ModuleTranspiler.DART_RESERVED_WORDS.indexOf(p) !== -1 ? '_' + p : p)\n        .join('.');\n  }\n}\n"]}